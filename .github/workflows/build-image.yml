name: Build & publish docker images

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: SBT cache
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-cache-sbt-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-cache-sbt-
      - name: ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2
          key: ${{ runner.os }}-cache-ivy-${{ hashFiles('project/dependencies.scala') }}-${{ hashFiles('**/build.sbt') }}-${{ hashFiles('project/plugins.sbt') }}-${{ hashFiles('project/*.scala') }}
          restore-keys: |
            ${{ runner.os }}-cache-ivy-${{ hashFiles('project/dependencies.scala') }}-${{ hashFiles('**/build.sbt') }}-${{ hashFiles('project/plugins.sbt') }}-
            ${{ runner.os }}-cache-ivy-${{ hashFiles('project/dependencies.scala') }}-${{ hashFiles('**/build.sbt') }}-
            ${{ runner.os }}-cache-ivy-${{ hashFiles('project/dependencies.scala') }}-
            ${{ runner.os }}-cache-ivy-
      - name: npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-cache-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-npm-

      - name: node_modules cache
        uses: actions/cache@v1
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-node-modules-

      - name: install npm dependencies
        run: cd frontend && npm install && cd ..

      - name: build
        run: sbt buildProd

      - name: build frontend image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.CANISTER_USERNAME }}
          password: ${{ secrets.CANISTER_PASSWORD }}
          repository: saksmt/blog-frontend
          registry: cloud.canister.io:5000
          tags: latest,${{ env.IMAGE_TAG }}
          add_git_labels: true
          path: frontend
          push: true
